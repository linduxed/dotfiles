local task_dir=$(grep "data.location" $HOME/.taskrc | cut -d "=" -f 2)
local task_dir=$(sed "s|~|$HOME|" <<< $task_dir)

alias t='task'

ts() {
    (
    cd $task_dir

    git commit -a $mode -m "$(hostname): $(date -Iseconds)" &&
    git pull --rebase origin master &&
    git push origin master
    )
}

tc() {
    (
    cd $task_dir

    git commit -a $mode -m "$(hostname): $(date -Iseconds)"
    )
}

tcd() {
    cd $task_dir
}

tlf() {
    task export |
    jq --raw-output \
        '
        map(select(
            .status != "completed" and
            .status != "deleted" and
            .status != "recurring" and
            .status != "waiting"
        )) |
        map(. + {
                fingerprint: {
                    status: .status,
                    project: .project,
                    description: .description,
                    tags: (if .tags? then (.tags | sort) else [] end)
                }
            }
        ) |
        unique_by(.fingerprint)[] |
        (.uuid | split("-"))[0] +
        ": " +
        .project +
        if .tags? then
            " [" +
            (.tags | sort | join(", ")) +
            "]"
        else
            ""
        end +
        " -- " +
        .description
        ' |
    shuf | fzf --prompt=" `date +%x` "
}

tlaf() {
    task export |
    jq --raw-output \
        '
        map(select(
            .mask == null
        )) |
        map(. + {
                fingerprint: {
                    project: .project,
                    description: .description,
                    tags: (if .tags? then (.tags | sort) else [] end)
                }
            }
        ) |
        unique_by(.fingerprint)[] |
        (.uuid | split("-"))[0] +
        ": " +
        .project +
        if .tags? then
            " [" +
            (.tags | sort | join(", ")) +
            "]"
        else
            ""
        end +
        " -- " +
        .description
        ' |
    shuf | fzf --prompt=" `date +%x` "
}

tlfuuid() {
    task=$(tlf)

    [[ -n $task ]] && cut -d ":" -f 1 <<< $task
}

tlafuuid() {
    task=$(tlaf)

    [[ -n $task ]] && cut -d ":" -f 1 <<< $task
}

tlfd() {
    task=$(tlfuuid)

    [[ -n $task ]] && task $task done
}

tlafa() {
    task=$(tlafuuid)

    [[ -n $task ]] && task $task duplicate due: wait: recur:
}

tlafad() {
    task=$(tlafuuid)

    [[ -n $task ]] && task $task duplicate due: wait: recur: end:now status:completed
}
